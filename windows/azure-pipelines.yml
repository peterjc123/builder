
# Turn off auto builds for commits
trigger: none
pr: none

variables:
  pytorch.build.version: '1.0.0'
  pytorch.build.number: 1
  pytorch.branch: v1.0
  pytorch.repo: pytorch
  build.cpu.enabled: false
  build.cuda.enabled: true
  build.wheels.enabled: true
  build.conda.enabled: true
  use.sccache.cpu: 1
  use.sccache.cuda: 1
  self.hosted.agent.cpu: true
  self.hosted.agent.cuda: true

jobs:
- job: 'Windows_CPU_Wheels_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.wheels.enabled'], 'true'))
  variables:
    PACKAGE: wheels_test
    CUDA_VERSION: cpu
    USE_SCCACHE: $(use.sccache.cpu)
  strategy:
    maxParallel: 10
    matrix:
      PY3.5:
        DESIRED_PYTHON: 3.5
      PY3.6:
        DESIRED_PYTHON: 3.6
      PY3.7:
        DESIRED_PYTHON: 3.7
      LIBTORCH:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1

  pool:
    name: 'release'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    enabled: false
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - script: 'call windows/build_pytorch.bat %CUDA_VERSION% %PYTORCH_BUILD_VERSION% %PYTORCH_BUILD_NUMBER%'
    displayName: Build

  - task: BatchScript@1
    displayName: 'Upload artifacts'
    inputs:
      filename: 'windows/internal/publish.bat'

      modifyEnvironment: false

- job: 'Windows_CPU_Conda_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.conda.enabled'], 'true'))
  variables:
    PACKAGE: conda_test
    CUDA_VERSION: cpu
    USE_SCCACHE: $(use.sccache.cpu)
    PYTORCH_FINAL_PACKAGE_DIR: '$(Build.Repository.LocalPath)\windows\output'
    TORCH_CONDA_BUILD_FOLDER: 'pytorch-1.0.0'

  strategy:
    maxParallel: 10
    matrix:
      PY3.5:
        DESIRED_PYTHON: 3.5
      PY3.6:
        DESIRED_PYTHON: 3.6
      PY3.7:
        DESIRED_PYTHON: 3.7

  pool:
    name: 'release'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    enabled: false
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - script: 'if not exist %PYTORCH_FINAL_PACKAGE_DIR% mkdir %PYTORCH_FINAL_PACKAGE_DIR%'
    displayName: 'Create final package directory'

  - bash: './conda/build_pytorch.sh $CUDA_VERSION $PYTORCH_BUILD_VERSION $PYTORCH_BUILD_NUMBER'
    displayName: 'Build'

  - task: BatchScript@1
    displayName: 'Upload artifacts'
    inputs:
      filename: 'windows/internal/publish.bat'

      modifyEnvironment: false

- job: 'Windows_CUDA_Wheels_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cuda.enabled'], 'true'), eq(variables['build.wheels.enabled'], 'true'))
  variables:
    PACKAGE: wheels_test
    USE_SCCACHE: $(use.sccache.cuda)
  strategy:
    maxParallel: 10
    matrix:
      # PY3.5_90:
      #   DESIRED_PYTHON: 3.5
      #   CUDA_VERSION: 90
      # PY3.6_90:
      #   DESIRED_PYTHON: 3.6
      #   CUDA_VERSION: 90
      # PY3.7_90:
      #   DESIRED_PYTHON: 3.7
      #   CUDA_VERSION: 90
      # LIBTORCH_90:
      #   DESIRED_PYTHON: 3
      #   BUILD_PYTHONLESS: 1
      #   CUDA_VERSION: 90
      # PY3.5_80:
      #   DESIRED_PYTHON: 3.5
      #   CUDA_VERSION: 80
      # PY3.6_80:
      #   DESIRED_PYTHON: 3.6
      #   CUDA_VERSION: 80
      # PY3.7_80:
      #   DESIRED_PYTHON: 3.7
      #   CUDA_VERSION: 80
      # LIBTORCH_80:
      #   DESIRED_PYTHON: 3
      #   BUILD_PYTHONLESS: 1
      #   CUDA_VERSION: 80
      PY3.5_100:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 100
      PY3.6_100:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 100
      PY3.7_100:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 100
      LIBTORCH_100:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1
        CUDA_VERSION: 100

  pool:
    name: 'release'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install CUDA'
    inputs:
      filename: 'windows/internal/cuda_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - script: 'call windows/build_pytorch.bat %CUDA_VERSION% %PYTORCH_BUILD_VERSION% %PYTORCH_BUILD_NUMBER%'
    displayName: Build

  - task: BatchScript@1
    displayName: 'Upload artifacts'
    inputs:
      filename: 'windows/internal/publish.bat'

      modifyEnvironment: false

- job: 'Windows_CUDA_Conda_Build'
  timeoutInMinutes: 0
  condition: and(eq(variables['build.cuda.enabled'], 'true'), eq(variables['build.conda.enabled'], 'true'))
  cancelTimeoutInMinutes: 5
  variables:
    PACKAGE: conda_test
    USE_SCCACHE: $(use.sccache.cuda)
    PYTORCH_FINAL_PACKAGE_DIR: '$(Build.Repository.LocalPath)\windows\output'
    TORCH_CONDA_BUILD_FOLDER: 'pytorch-1.0.0'

  strategy:
    maxParallel: 10
    matrix:
      # PY3.5_90:
      #   DESIRED_PYTHON: 3.5
      #   CUDA_VERSION: 90
      # PY3.6_90:
      #   DESIRED_PYTHON: 3.6
      #   CUDA_VERSION: 90
      # PY3.7_90:
      #   DESIRED_PYTHON: 3.7
      #   CUDA_VERSION: 90
      # PY3.5_80:
      #   DESIRED_PYTHON: 3.5
      #   CUDA_VERSION: 80
      # PY3.6_80:
      #   DESIRED_PYTHON: 3.6
      #   CUDA_VERSION: 80
      # PY3.7_80:
      #   DESIRED_PYTHON: 3.7
      #   CUDA_VERSION: 80
      PY3.5_100:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 100
      PY3.6_100:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 100
      PY3.7_100:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 100

  pool:
    name: 'release'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install CUDA'
    inputs:
      filename: 'windows/internal/cuda_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - script: 'if not exist %PYTORCH_FINAL_PACKAGE_DIR% mkdir %PYTORCH_FINAL_PACKAGE_DIR%'
    displayName: 'Create final package directory'

  - bash: './conda/build_pytorch.sh $CUDA_VERSION $PYTORCH_BUILD_VERSION $PYTORCH_BUILD_NUMBER'
    displayName: 'Build'

  - task: BatchScript@1
    displayName: 'Upload artifacts'
    inputs:
      filename: 'windows/internal/publish.bat'

      modifyEnvironment: false
